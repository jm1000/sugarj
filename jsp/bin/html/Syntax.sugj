package html;

import org.sugarj.languages.Plain;

public extension Syntax {
	
	%% module hmtl-text
 	lexical syntax
    [\ \t\n\13] -> WhiteSpaceChar

 	syntax
    CharDataPart+ 					-> CharData {cons("Text")}
    FooCharDataText 				-> CharDataPart {cons("CharDataPart")}
    Ref 							-> CharDataPart
    <CharDataText-LEX> 				-> FooCharDataText
    "&"   <NCName-LEX>   ";" -> EntityRef  {cons("EntityRef")}
    CharRef    -> Ref
    EntityRef  -> Ref

  	syntax restrictions
    CharData -/- [\&] | ~[\<\&]

 	lexical syntax
    ~[\<\&]+ -> CharDataText

	lexical restrictions
    CharDataToken    -/- ~[\<\]\ \t\n\13]
    CharDataText -/- ~[\<\&]

	%% module html-names
	  lexical syntax
    [A-Za-z\_] [A-Za-z0-9\.\-\_]* -> NCName

  	lexical restrictions
    NCName -/- [A-Za-z0-9\.\-\_]
	  
	  
	%% Basic html structure
  	context-free syntax
	  DocTypeDecl? HTMLDoc -> Document {cons("Document")}
	  HTMLOpen Head Body HTMLClose -> HTMLDoc {cons("HTMLDoc")}
	  HeadOpen Title HeadContent* HeadClose -> Head {cons("Head")}
	  BodyOpen BodyContent* BodyClose -> Body {cons("Body")}
	  Comment -> HeadContent{cons("Comment")}
	  Comment -> BodyContent{cons("Comment")}
	  
	%% Head content 1.0
	%% TBD: Meta-Data, base, link, comments
	context-free syntax
	  "<head>" -> HeadOpen{cons("HeadOpen")}
	  "</head>" -> HeadClose{cons("HeadClose")}
	  Style -> HeadContent{cons("Style")}
	  Script -> HeadContent{cons("Script")}
	  "<title>" CharData "</title>" -> Title{cons("Title")}
	  %% "<style type=" StyleType ">" StyleContent* "</style>" -> Style{cons("StyleDecl")}
	  "<script" ScriptType "src=\"" URL "\"" ScriptDefer? ScriptCharset?"></script>" -> Script{cons("ExtScript")}
	  "<script" ScriptType ">" ScriptContent "</script>" -> Script{cons("DocScript")}
	  
	%% Body Declaration
	context-free syntax
	  "<body" BodyAttribute* ">" -> BodyOpen{cons("BodyOpen")}
	  "</body>" -> BodyClose{cons("BodyClose")}
	  "alink=" HTMLColor -> BodyAttribute{cons("BodyALinkColor")}
	  "background=" URL -> BodyAttribute{cons("BodyBackground")}
	  "bgcolor=" HTMLColor -> BodyAttribute{cons("BodyBGColor")}
	  "link=" HTMLColor -> BodyAttribute{cons("BodyLinkColor")}
	%%  "onload="
	%%  "onunload="
	  "text=" HTMLColor -> BodyAttribute{cons("BodyTextColor")}
	  "vlink=" HTMLColor -> BodyAttribute{cons("BodyVLinkColor")}
	  
	
	
}